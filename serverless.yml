service: celsus-core

provider:
  name: aws
  runtime: nodejs8.10
  versionFunctions: false
  memorySize: 1024
  region: eu-west-2
  stage: dev
  endpointType: REGIONAL
  profile: serverless-admin-profile
  # >>> Enable Gzip compression on AWS APi Gateway
  apiGateway:
    minimumCompressionSize: 1024 # in bytes
  # <<< Enable Gzip compression on AWS APi Gateway
  # >>> Lambda has to live in VPC in order to access RDS
  role: arn:aws:iam::671123374425:role/lambda-vpc-execution-role
  vpc:
    securityGroupIds:
      - sg-06c688947d175cf8d # To access the RDS instance
      - sg-a59484cd # To publish to SNS via the VPC Endpoint
    subnetIds:
      - subnet-a5cafae8
      - subnet-5cf05835
      - subnet-a8b456d2
  # <<< Lambda has to live in VPC in order to access RDS

  environment:
    PGUSER: ${ssm:PG_USERNAME~true}
    PGPASSWORD: ${ssm:PG_PASSWORD~true}
    PGHOST: ${ssm:PG_HOSTNAME~true}
    PGPORT: ${ssm:PG_PORT~true}
    PGDATABASE: ${ssm:PG_DB_NAME~true}
    PGSCHEMA: ${ssm:PG_CORE_SCHEMA~true}
    REGION: ${self:provider.region}
    LOG_LEVEL: info

package:
  exclude:
    - .env
    - .vscode/**
    - .travis.yml
    - coverage/**
    - test/**
    - scripts/**
    - run-local-postgres.sh
    - secrets.txt

#custom:
#  # >>> Custom domain name
#  customDomain:
#    domainName: api.celsus.isnan.eu
#    stage: ${self:provider.stage}
#    createRoute53Record: true
#    certificateName: 'api.celsus.isnan.eu'
#    hostedZoneId: ZWC66FN0XU6P9
#  # <<< Custom domain name

functions:
  getLibraries:
    handler: handler.getLibraries
    name: get-libraries
    events:
      - http:
          path: v1/libraries
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-2:671123374425:userpool/eu-west-2_ocAf57dZ3
  postLibrary:
    handler: handler.postLibrary
    name: post-library
    events:
      - http:
          path: v1/libraries
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-2:671123374425:userpool/eu-west-2_ocAf57dZ3
  deleteLibrary:
    handler: handler.deleteLibrary
    name: delete-library
    events:
      - http:
          path: v1/libraries/{id}
          method: delete
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-2:671123374425:userpool/eu-west-2_ocAf57dZ3
  getLibrary:
    handler: handler.getLibrary
    name: get-library
    events:
      - http:
          path: v1/libraries/{id}
          method: get
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-2:671123374425:userpool/eu-west-2_ocAf57dZ3
  getBooks:
    handler: handler.getBooks
    name: get-books
    events:
      - http:
          path: v1/books
          method: get
          request:
            parameters:
              querystrings:
                offset: false
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-2:671123374425:userpool/eu-west-2_ocAf57dZ3
  deleteBook:
    handler: handler.deleteBook
    name: delete-book
    events:
      - http:
          path: v1/books/{id}
          method: delete
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-2:671123374425:userpool/eu-west-2_ocAf57dZ3
  postBook:
    handler: handler.postBook
    name: post-book
    events:
      - http:
          path: v1/books
          method: post
          cors: true
          authorizer:
            arn: arn:aws:cognito-idp:eu-west-2:671123374425:userpool/eu-west-2_ocAf57dZ3
